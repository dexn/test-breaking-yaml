substitutions:
  # Can only contain lowercase a-z, 0-9 and hyphens. Can be at most 24 characters long.
  name: "athom-rgbct-light"
  # This is the friendly name that can also contain uppercase letters, spaces and other characters.
  friendly_name: "RGBCCT Bulb"
  # Allows ESP device to be automatically lined to an 'Area' in Home Assistant. Typically used for areas such as 'Lounge Room', 'Kitchen' etc
  room: ""
  light_restore_mode: RESTORE_DEFAULT_ON
  color_interlock: 'true'
  # Define a domain for this device to use. i.e. iot.home.lan (so device will appear as name.iot.home.lan in DNS/DHCP logs).
  dns_domain: ""
  # Set timezone of the device. Useful if the device is in a location different to the HA server. Can be entered in unix Country/Area format (i.e. "Australia/Sydney").
  timezone: ""
  # Enables faster network connections, with last connected SSID being connected to and no full scan for SSID being undertaken
  wifi_fast_connect: "false" 
  device_description: "Athom RGBCCT Bulb"
  project_name: "Athom Technology.RGBCCT Bulb"
  project_version: "1.1.1"

esphome:
  min_version: 2024.6.0
  on_boot:
    then:
      - script.execute: fast_boot_script

dashboard_import:
  package_import_url: github://dexn/test-breaking-yaml/athom-rgbct-light.yaml

packages:
  base_package: github://dexn/test-breaking-yaml/base.yaml

globals:
  - id: fast_boot
    type: int
    restore_value: yes
    initial_value: '0'

light:
  - platform: rgbct
    id: rgbct_light
    name: "RGBCT_Bulb"
    restore_mode: ${light_restore_mode}
    red: red_output
    green: green_output
    blue: blue_output
    white_brightness: white_output
    color_temperature: ct_output
    cold_white_color_temperature: 153 mireds
    warm_white_color_temperature: 500 mireds
    color_interlock: ${color_interlock}

output:
  - platform: esp8266_pwm
    id: red_output
    pin: GPIO4
    min_power: 0.000499
    max_power: 1
    zero_means_zero: true
  - platform: esp8266_pwm
    id: green_output
    pin: GPIO12
    min_power: 0.000499
    max_power: 1
    zero_means_zero: true
  - platform: esp8266_pwm
    id: blue_output
    pin: GPIO14
    min_power: 0.000499
    max_power: 1
    zero_means_zero: true
  - platform: esp8266_pwm
    id: white_output
    pin: GPIO5
    min_power: 0.01
    max_power: 1
    zero_means_zero: true
  - platform: esp8266_pwm
    id: ct_output
    inverted: true
    pin: GPIO13

script:
  - id: fast_boot_script
    then:
      - if:
          condition:
            lambda: return ( id(fast_boot) >= 3 );
          then:
            - lambda: |-
                ESP_LOGD("athom-rgbct-light.yaml", "Now the counter is greater than or equal to 3, perform reset device and reboot");
                id(fast_boot) = 0;
                fast_boot->loop();
                global_preferences->sync();
                auto call = id(rgbct_light).turn_on();
                call.set_transition_length(500);
                call.set_brightness(1.0);
                call.set_color_mode(ColorMode::RGB);
                call.set_rgb(0.0, 0.0, 1.0);
                call.perform();
            - delay: 5s
            - button.press: Reset
      - lambda: |-
          id(fast_boot) += 1;
          fast_boot->loop();
          global_preferences->sync();
          ESP_LOGD("athom-rgbct-light.yaml", "Now the counter is %d.  Reset the device when the counter is greater than or equal to 3", id(fast_boot));
      - delay: 10s
      - lambda: |-
          ESP_LOGD("athom-rgbct-light.yaml", "Reset counter");
          id(fast_boot) = 0;
          fast_boot->loop();
          global_preferences->sync();
